> x <- c(1:100)
> x
  [1]   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16
 [17]  17  18  19  20  21  22  23  24  25  26  27  28  29  30  31  32
 [33]  33  34  35  36  37  38  39  40  41  42  43  44  45  46  47  48
 [49]  49  50  51  52  53  54  55  56  57  58  59  60  61  62  63  64
 [65]  65  66  67  68  69  70  71  72  73  74  75  76  77  78  79  80
 [81]  81  82  83  84  85  86  87  88  89  90  91  92  93  94  95  96
 [97]  97  98  99 100
> length(x)
[1] 100
> x[1]
[1] 1
> x[0]
integer(0)
> x[-19]
 [1]   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16  17
[18]  18  20  21  22  23  24  25  26  27  28  29  30  31  32  33  34  35
[35]  36  37  38  39  40  41  42  43  44  45  46  47  48  49  50  51  52
[52]  53  54  55  56  57  58  59  60  61  62  63  64  65  66  67  68  69
[69]  70  71  72  73  74  75  76  77  78  79  80  81  82  83  84  85  86
[86]  87  88  89  90  91  92  93  94  95  96  97  98  99 100
> x[c(4:18)]
 [1]  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18
> x[c(1,23,45,67,89)]
[1]  1 23 45 67 89
> x[c(11,11,23,45,67,89)]
[1] 11 11 23 45 67 89
> x[c(-2,3,4)]
Error in x[c(-2, 3, 4)] : only 0's may be mixed with negative subscripts
> y<-c(1:10)
> y
 [1]  1  2  3  4  5  6  7  8  9 10
> y[c(T,F,T,T,F,T,T,T,F)]
[1]  1  3  4  6  7  8 10
> y[c(T)]
 [1]  1  2  3  4  5  6  7  8  9 10
> y[c(F)]
integer(0)
> y[c(T,F)]
[1] 1 3 5 7 9
> y[c(T,F,F)]
[1]  1  4  7 10
> y[c(T,F,T,T,F,F,T,T,T,F,T)]
[1]  1  3  4  7  8  9 NA
> y[y>5]
[1]  6  7  8  9 10
> y[y>5 && y<9]
integer(0)
Warning message:
In y > 5 && y < 9 : 'length(x) = 10 > 1' in coercion to 'logical(1)'
> y[y>5 & y<9]
[1] 6 7 8
> z <-c('a','b','c','d','e')
> 'a' %in% z
[1] TRUE
> z['a' %in% z]
[1] "a" "b" "c" "d" "e"
> z['a' %in% c('a','b')]
[1] "a" "b" "c" "d" "e"
> z[z %in% c('a','b')]
[1] "a" "b"
> z %in% c('a','b')
[1]  TRUE  TRUE FALSE FALSE FALSE
> k <- z %in% c('a','b')
> z[k]
[1] "a" "b"
> names(y)
NULL
> names(y) <- c('a','b','c','d','e')
> y
   a    b    c    d    e <NA> <NA> <NA> <NA> <NA> 
   1    2    3    4    5    6    7    8    9   10 
> names(y)
 [1] "a" "b" "c" "d" "e" NA  NA  NA  NA  NA 
> euro
        ATS         BEF         DEM         ESP         FIM         FRF 
  13.760300   40.339900    1.955830  166.386000    5.945730    6.559570 
        IEP         ITL         LUF         NLG         PTE 
   0.787564 1936.270000   40.339900    2.203710  200.482000 
> euro["ATS"]
    ATS 
13.7603 
> y['one']
<NA> 
  NA 
> y['a']
a 
1 
> x
  [1]   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16
 [17]  17  18  19  20  21  22  23  24  25  26  27  28  29  30  31  32
 [33]  33  34  35  36  37  38  39  40  41  42  43  44  45  46  47  48
 [49]  49  50  51  52  53  54  55  56  57  58  59  60  61  62  63  64
 [65]  65  66  67  68  69  70  71  72  73  74  75  76  77  78  79  80
 [81]  81  82  83  84  85  86  87  88  89  90  91  92  93  94  95  96
 [97]  97  98  99 100
> x[101] <- 101
> x
  [1]   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16
 [17]  17  18  19  20  21  22  23  24  25  26  27  28  29  30  31  32
 [33]  33  34  35  36  37  38  39  40  41  42  43  44  45  46  47  48
 [49]  49  50  51  52  53  54  55  56  57  58  59  60  61  62  63  64
 [65]  65  66  67  68  69  70  71  72  73  74  75  76  77  78  79  80
 [81]  81  82  83  84  85  86  87  88  89  90  91  92  93  94  95  96
 [97]  97  98  99 100 101
> v <- 1:3
> v[c(4,5,6)] <- c(4,5,6)
> v
[1] 1 2 3 4 5 6
> v[20 <- 4]
Error in 20 <- 4 : invalid (do_set) left-hand side to assignment
> v
[1] 1 2 3 4 5 6
> v[20] <- 4
> v
 [1]  1  2  3  4  5  6 NA NA NA NA NA NA NA NA NA NA NA NA NA  4
> append(x = v,values = 99,after = 5)
 [1]  1  2  3  4  5 99  6 NA NA NA NA NA NA NA NA NA NA NA NA NA  4
> append(x = v,values = 99,after = 0)
 [1] 99  1  2  3  4  5  6 NA NA NA NA NA NA NA NA NA NA NA NA NA  4
> rm(v)
> v
Error: object 'v' not found
> y[-c(1:3)]
   d    e <NA> <NA> <NA> <NA> <NA> 
   4    5    6    7    8    9   10 
> y <- y[-c(1:3)]
> y
   d    e <NA> <NA> <NA> <NA> <NA> 
   4    5    6    7    8    9   10 
> y['d'] <- 100
> y
   d    e <NA> <NA> <NA> <NA> <NA> 
 100    5    6    7    8    9   10 
> v
Error: object 'v' not found
> v[2]
Error: object 'v' not found
> v[2] <- 1
Error in v[2] <- 1 : object 'v' not found
> y[2]
e 
5 
> y[2] <- 15
> y[2]
 e 
15 
> y[2] <- 'a'
> y
    d     e  <NA>  <NA>  <NA>  <NA>  <NA> 
"100"   "a"   "6"   "7"   "8"   "9"  "10" 
> x <- 1:10
> x
 [1]  1  2  3  4  5  6  7  8  9 10
> x+1
 [1]  2  3  4  5  6  7  8  9 10 11
> x-3
 [1] -2 -1  0  1  2  3  4  5  6  7
> x <- x+1
> x
 [1]  2  3  4  5  6  7  8  9 10 11
> y <- seq(1,100,length.out = 10)
> y
 [1]   1  12  23  34  45  56  67  78  89 100
> x+y
 [1]   3  15  27  39  51  63  75  87  99 111
> x*y
 [1]    2   36   92  170  270  392  536  702  890 1100
> x**y
 [1]  2.000000e+00  5.314410e+05  7.036874e+13  5.820766e+23
 [5]  1.039456e+35  2.115876e+47  3.213876e+60  2.697216e+74
 [9]  1.000000e+89 1.378061e+104
> y%%x
 [1] 1 0 3 4 3 0 3 6 9 1
> y%/%x
 [1] 0 4 5 6 7 8 8 8 8 9
> z <- c(1,2)
> x
 [1]  2  3  4  5  6  7  8  9 10 11
> x+z
 [1]  3  5  5  7  7  9  9 11 11 13
> z
[1] 1 2
> x*z
 [1]  2  6  4 10  6 14  8 18 10 22
> z <- 1:3
> x
 [1]  2  3  4  5  6  7  8  9 10 11
> z
[1] 1 2 3
> x+z
 [1]  3  5  7  6  8 10  9 11 13 12
Warning message:
In x + z : longer object length is not a multiple of shorter object length
> x>5
 [1] FALSE FALSE FALSE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE  TRUE
> x
 [1]  2  3  4  5  6  7  8  9 10 11
> x>y
 [1]  TRUE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
> c(1,2,3) %in% c(1,2,2,4,5,6)
[1]  TRUE  TRUE FALSE
> x
 [1]  2  3  4  5  6  7  8  9 10 11
> y
 [1]   1  12  23  34  45  56  67  78  89 100
> x==y
 [1] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
> x <- -5:5
> x
 [1] -5 -4 -3 -2 -1  0  1  2  3  4  5
> abs[x]
Error in abs[x] : object of type 'builtin' is not subsettable
> abs(c)
Error in abs(c) : non-numeric argument to mathematical function
> abs(x)
 [1] 5 4 3 2 1 0 1 2 3 4 5
> sqrt(x)
 [1]      NaN      NaN      NaN      NaN      NaN 0.000000 1.000000
 [8] 1.414214 1.732051 2.000000 2.236068
Warning message:
In sqrt(x) : NaNs produced
> log(16)
[1] 2.772589
> log(16,base =2)
[1] 4
> log10(10)
[1] 1
> exp(x)
 [1] 6.737947e-03 1.831564e-02 4.978707e-02 1.353353e-01 3.678794e-01
 [6] 1.000000e+00 2.718282e+00 7.389056e+00 2.008554e+01 5.459815e+01
[11] 1.484132e+02
> ceiling(c(-2.3,3.1415))
[1] -2  4
> floor(c(-2.3,3.1415))
[1] -3  3
> trunc(c(-2.3,3.1415))
[1] -2  3
> round(c(-2.3,3.1415))
[1] -2  3
> round(c(-2.3,3.1415),digits = 2)
[1] -2.30  3.14
> signif(c(-2.3,3.1415),digits = 2)
[1] -2.3  3.1
> sin()
Error in sin() : 0 arguments passed to 'sin' which requires 1
> sin(x)
 [1]  0.9589243  0.7568025 -0.1411200 -0.9092974 -0.8414710  0.0000000
 [7]  0.8414710  0.9092974  0.1411200 -0.7568025 -0.9589243
> cos(x)
 [1]  0.2836622 -0.6536436 -0.9899925 -0.4161468  0.5403023  1.0000000
 [7]  0.5403023 -0.4161468 -0.9899925 -0.6536436  0.2836622
> vec <- 1:100
> vec
  [1]   1   2   3   4   5   6   7   8   9  10  11  12  13  14  15  16
 [17]  17  18  19  20  21  22  23  24  25  26  27  28  29  30  31  32
 [33]  33  34  35  36  37  38  39  40  41  42  43  44  45  46  47  48
 [49]  49  50  51  52  53  54  55  56  57  58  59  60  61  62  63  64
 [65]  65  66  67  68  69  70  71  72  73  74  75  76  77  78  79  80
 [81]  81  82  83  84  85  86  87  88  89  90  91  92  93  94  95  96
 [97]  97  98  99 100
> sum(vec)
[1] 5050
> max(vec)
[1] 100
> min(vec)
[1] 1
> range(vec)
[1]   1 100
> mean(vec)
[1] 50.5
> var(vec)
[1] 841.6667
> round(var(vec))
[1] 842
> round(var(vec),digits = 2)
[1] 841.67
> round(sd(vec),digits = 2)
[1] 29.01
> prod(vec)
[1] 9.332622e+157
> median(vec)
[1] 50.5
> quantile(vec)
    0%    25%    50%    75%   100% 
  1.00  25.75  50.50  75.25 100.00 
> quantile(vec,c(0.4,0.5,0.8))
 40%  50%  80% 
40.6 50.5 80.2 
> t <- c(1,4,2,5,7,9,6)
> t
[1] 1 4 2 5 7 9 6
> which.max(t)
[1] 6
> which.min(t)
[1] 1
> which(t==7)
[1] 5
> t <- (which(t>5))
> t
[1] 5 6 7
> heatmap(state.x77)
> x <- 1:20
> x
 [1]  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20
> m <- matrix(x,nrow = 4,ncol = 5)
> m
     [,1] [,2] [,3] [,4] [,5]
[1,]    1    5    9   13   17
[2,]    2    6   10   14   18
[3,]    3    7   11   15   19
[4,]    4    8   12   16   20
> m <- matrix(1:20,4)
> m
     [,1] [,2] [,3] [,4] [,5]
[1,]    1    5    9   13   17
[2,]    2    6   10   14   18
[3,]    3    7   11   15   19
[4,]    4    8   12   16   20
> rnames <- c('r1','r2','r3','r4')
> rnames
[1] "r1" "r2" "r3" "r4"
> cnames <- c('c1','c2','c3','c4','c5')
> cnames
[1] "c1" "c2" "c3" "c4" "c5"
> dimnames(m) <- list(rnames,cnames)
> m
   c1 c2 c3 c4 c5
r1  1  5  9 13 17
r2  2  6 10 14 18
r3  3  7 11 15 19
r4  4  8 12 16 20
> ?dim
> dim(x)
NULL
> dim(x) <- c(4,5)
> x
     [,1] [,2] [,3] [,4] [,5]
[1,]    1    5    9   13   17
[2,]    2    6   10   14   18
[3,]    3    7   11   15   19
[4,]    4    8   12   16   20
> x <- 1:2
> x <- 1:20
> dim(x) <- c(2,2,5)
> x
, , 1

     [,1] [,2]
[1,]    1    3
[2,]    2    4

, , 2

     [,1] [,2]
[1,]    5    7
[2,]    6    8

, , 3

     [,1] [,2]
[1,]    9   11
[2,]   10   12

, , 4

     [,1] [,2]
[1,]   13   15
[2,]   14   16

, , 5

     [,1] [,2]
[1,]   17   19
[2,]   18   20

> ?array
> dim1 <- c('A1','A2')
> dim2 <- c('b1','b2','b3')
> dim3 <- c('c1','c2','c3','c4')
> z <- array(1:24,c(2,3,4),dimnames = list(dim1,dim2,dim3))
> z
, , c1

   b1 b2 b3
A1  1  3  5
A2  2  4  6

, , c2

   b1 b2 b3
A1  7  9 11
A2  8 10 12

, , c3

   b1 b2 b3
A1 13 15 17
A2 14 16 18

, , c4

   b1 b2 b3
A1 19 21 23
A2 20 22 24

> m <- matrix(1:20,4,5,byrow)
Error in matrix(1:20, 4, 5, byrow) : object 'byrow' not found
> m <- matrix(1:20,4,5,byrow = T)
> m
     [,1] [,2] [,3] [,4] [,5]
[1,]    1    2    3    4    5
[2,]    6    7    8    9   10
[3,]   11   12   13   14   15
[4,]   16   17   18   19   20
> m[1,2]
[1] 2
> m[1,c(2,3,4)]
[1] 2 3 4
> m[c(2:4),c(2,3)]
     [,1] [,2]
[1,]    7    8
[2,]   12   13
[3,]   17   18
> m[2,]
[1]  6  7  8  9 10
> m[,2]
[1]  2  7 12 17
> m[2]
[1] 6
> m[-1,2]
[1]  7 12 17
> dimnames(m) = list(rnames,cnames)
> m
   c1 c2 c3 c4 c5
r1  1  2  3  4  5
r2  6  7  8  9 10
r3 11 12 13 14 15
r4 16 17 18 19 20
> m['r1','c2']
[1] 2
> m+1
   c1 c2 c3 c4 c5
r1  2  3  4  5  6
r2  7  8  9 10 11
r3 12 13 14 15 16
r4 17 18 19 20 21
> m
   c1 c2 c3 c4 c5
r1  1  2  3  4  5
r2  6  7  8  9 10
r3 11 12 13 14 15
r4 16 17 18 19 20
> m*2
   c1 c2 c3 c4 c5
r1  2  4  6  8 10
r2 12 14 16 18 20
r3 22 24 26 28 30
r4 32 34 36 38 40
> m=+m
> 
> m
   c1 c2 c3 c4 c5
r1  1  2  3  4  5
r2  6  7  8  9 10
r3 11 12 13 14 15
r4 16 17 18 19 20
> m+m
   c1 c2 c3 c4 c5
r1  2  4  6  8 10
r2 12 14 16 18 20
r3 22 24 26 28 30
r4 32 34 36 38 40
> colSums(m)
c1 c2 c3 c4 c5 
34 38 42 46 50 
> rowSums(m)
r1 r2 r3 r4 
15 40 65 90 
> colMeans(m)
  c1   c2   c3   c4   c5 
 8.5  9.5 10.5 11.5 12.5 
> rowMeans(m)
r1 r2 r3 r4 
 3  8 13 18 
> n <- matrix(1:9,3,3)
> n
     [,1] [,2] [,3]
[1,]    1    4    7
[2,]    2    5    8
[3,]    3    6    9
> t
[1] 5 6 7
> n*t
     [,1] [,2] [,3]
[1,]    5   20   35
[2,]   12   30   48
[3,]   21   42   63
> n %*% t
     [,1]
[1,]   78
[2,]   96
[3,]  114
> diag(n)
[1] 1 5 9
> diag(m)
[1]  1  7 13 19
> is.na(sleep)
      BodyWgt BrainWgt  NonD Dream Sleep  Span  Gest  Pred   Exp Danger
 [1,]   FALSE    FALSE  TRUE  TRUE FALSE FALSE FALSE FALSE FALSE  FALSE
 [2,]   FALSE    FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  FALSE
 [3,]   FALSE    FALSE  TRUE  TRUE FALSE FALSE FALSE FALSE FALSE  FALSE
 [4,]   FALSE    FALSE  TRUE  TRUE FALSE  TRUE FALSE FALSE FALSE  FALSE
 [5,]   FALSE    FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  FALSE
 [6,]   FALSE    FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  FALSE
 [7,]   FALSE    FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  FALSE
 [8,]   FALSE    FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  FALSE
 [9,]   FALSE    FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  FALSE
[10,]   FALSE    FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  FALSE
[11,]   FALSE    FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  FALSE
[12,]   FALSE    FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  FALSE
[13,]   FALSE    FALSE FALSE FALSE FALSE  TRUE  TRUE FALSE FALSE  FALSE
[14,]   FALSE    FALSE  TRUE  TRUE FALSE FALSE FALSE FALSE FALSE  FALSE
[15,]   FALSE    FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  FALSE
[16,]   FALSE    FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  FALSE
[17,]   FALSE    FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  FALSE
[18,]   FALSE    FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  FALSE
[19,]   FALSE    FALSE FALSE FALSE FALSE FALSE  TRUE FALSE FALSE  FALSE
[20,]   FALSE    FALSE FALSE FALSE FALSE FALSE  TRUE FALSE FALSE  FALSE
[21,]   FALSE    FALSE  TRUE FALSE  TRUE FALSE FALSE FALSE FALSE  FALSE
[22,]   FALSE    FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  FALSE
[23,]   FALSE    FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  FALSE
[24,]   FALSE    FALSE  TRUE  TRUE FALSE FALSE FALSE FALSE FALSE  FALSE
[25,]   FALSE    FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  FALSE
[26,]   FALSE    FALSE  TRUE  TRUE FALSE FALSE FALSE FALSE FALSE  FALSE
[27,]   FALSE    FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  FALSE
[28,]   FALSE    FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  FALSE
[29,]   FALSE    FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  FALSE
[30,]   FALSE    FALSE  TRUE  TRUE FALSE FALSE FALSE FALSE FALSE  FALSE
[31,]   FALSE    FALSE  TRUE  TRUE  TRUE FALSE FALSE FALSE FALSE  FALSE
[32,]   FALSE    FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  FALSE
[33,]   FALSE    FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  FALSE
[34,]   FALSE    FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  FALSE
[35,]   FALSE    FALSE FALSE FALSE FALSE  TRUE FALSE FALSE FALSE  FALSE
[36,]   FALSE    FALSE FALSE FALSE FALSE  TRUE FALSE FALSE FALSE  FALSE
[37,]   FALSE    FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  FALSE
[38,]   FALSE    FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  FALSE
[39,]   FALSE    FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  FALSE
[40,]   FALSE    FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  FALSE
[41,]   FALSE    FALSE  TRUE FALSE  TRUE FALSE FALSE FALSE FALSE  FALSE
[42,]   FALSE    FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  FALSE
[43,]   FALSE    FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  FALSE
[44,]   FALSE    FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  FALSE
[45,]   FALSE    FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  FALSE
[46,]   FALSE    FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  FALSE
[47,]   FALSE    FALSE  TRUE  TRUE FALSE FALSE FALSE FALSE FALSE  FALSE
[48,]   FALSE    FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  FALSE
[49,]   FALSE    FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  FALSE
[50,]   FALSE    FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  FALSE
[51,]   FALSE    FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  FALSE
[52,]   FALSE    FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  FALSE
[53,]   FALSE    FALSE  TRUE  TRUE FALSE FALSE FALSE FALSE FALSE  FALSE
[54,]   FALSE    FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  FALSE
[55,]   FALSE    FALSE  TRUE  TRUE FALSE FALSE FALSE FALSE FALSE  FALSE
[56,]   FALSE    FALSE FALSE FALSE FALSE FALSE  TRUE FALSE FALSE  FALSE
[57,]   FALSE    FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  FALSE
[58,]   FALSE    FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  FALSE
[59,]   FALSE    FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  FALSE
[60,]   FALSE    FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  FALSE
[61,]   FALSE    FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE  FALSE
[62,]   FALSE    FALSE  TRUE  TRUE  TRUE FALSE FALSE FALSE FALSE  FALSE
> colSums(sleep)
 BodyWgt BrainWgt     NonD    Dream    Sleep     Span     Gest     Pred 
12324.98 17554.32       NA       NA       NA       NA       NA   178.00 
     Exp   Danger 
  150.00   162.00 
> rowSums(sleep)
 [1]       NA   77.700       NA       NA 7862.800  428.650   96.723
 [8]  776.800  152.900  794.560  163.825 1221.800       NA       NA
[15]   66.575  129.200   79.685  163.000       NA       NA       NA
[22]  333.260   55.820       NA  778.400       NA   77.701  110.540
[29] 1578.800       NA       NA   53.445  117.060 1768.000       NA
[36]       NA   57.023   65.978   67.800  179.600       NA  207.980
[43]  349.000   75.420  542.800   95.400       NA   61.280  139.035
[50]  405.000  264.250  274.400       NA  424.100       NA       NA
[57]   99.600  239.600   89.504  327.790   67.200       NA
> ?na.omit
> c <- c(NA,1:20,NA,NA)
> c
 [1] NA  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 NA
[23] NA
> d <- na.omit(c)
> d
 [1]  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20
attr(,"na.action")
[1]  1 22 23
attr(,"class")
[1] "omit"
> is.na(d)
 [1] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
[12] FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE FALSE
> sum(d)
[1] 210
> mean(d)
[1] 10.5
> na.omit(sleep)
    BodyWgt BrainWgt NonD Dream Sleep  Span  Gest Pred Exp Danger
2     1.000     6.60  6.3   2.0   8.3   4.5  42.0    3   1      3
5  2547.000  4603.00  2.1   1.8   3.9  69.0 624.0    3   5      4
6    10.550   179.50  9.1   0.7   9.8  27.0 180.0    4   4      4
7     0.023     0.30 15.8   3.9  19.7  19.0  35.0    1   1      1
8   160.000   169.00  5.2   1.0   6.2  30.4 392.0    4   5      4
9     3.300    25.60 10.9   3.6  14.5  28.0  63.0    1   2      1
10   52.160   440.00  8.3   1.4   9.7  50.0 230.0    1   1      1
11    0.425     6.40 11.0   1.5  12.5   7.0 112.0    5   4      4
12  465.000   423.00  3.2   0.7   3.9  30.0 281.0    5   5      5
15    0.075     1.20  6.3   2.1   8.4   3.5  42.0    1   1      1
16    3.000    25.00  8.6   0.0   8.6  50.0  28.0    2   2      2
17    0.785     3.50  6.6   4.1  10.7   6.0  42.0    2   2      2
18    0.200     5.00  9.5   1.2  10.7  10.4 120.0    2   2      2
22   27.660   115.00  3.3   0.5   3.8  20.0 148.0    5   5      5
23    0.120     1.00 11.0   3.4  14.4   3.9  16.0    3   1      2
25   85.000   325.00  4.7   1.5   6.2  41.0 310.0    1   3      1
27    0.101     4.00 10.4   3.4  13.8   9.0  28.0    5   1      3
28    1.040     5.50  7.4   0.8   8.2   7.6  68.0    5   3      4
29  521.000   655.00  2.1   0.8   2.9  46.0 336.0    5   5      5
32    0.005     0.14  7.7   1.4   9.1   2.6  21.5    5   2      4
33    0.010     0.25 17.9   2.0  19.9  24.0  50.0    1   1      1
34   62.000  1320.00  6.1   1.9   8.0 100.0 267.0    1   1      1
37    0.023     0.40 11.9   1.3  13.2   3.2  19.0    4   1      3
38    0.048     0.33 10.8   2.0  12.8   2.0  30.0    4   1      3
39    1.700     6.30 13.8   5.6  19.4   5.0  12.0    2   1      1
40    3.500    10.80 14.3   3.1  17.4   6.5 120.0    2   1      1
42    0.480    15.50 15.2   1.8  17.0  12.0 140.0    2   2      2
43   10.000   115.00 10.0   0.9  10.9  20.2 170.0    4   4      4
44    1.620    11.40 11.9   1.8  13.7  13.0  17.0    2   1      2
45  192.000   180.00  6.5   1.9   8.4  27.0 115.0    4   4      4
46    2.500    12.10  7.5   0.9   8.4  18.0  31.0    5   5      5
48    0.280     1.90 10.6   2.6  13.2   4.7  21.0    3   1      3
49    4.235    50.40  7.4   2.4   9.8   9.8  52.0    1   1      1
50    6.800   179.00  8.4   1.2   9.6  29.0 164.0    2   3      2
51    0.750    12.30  5.7   0.9   6.6   7.0 225.0    2   2      2
52    3.600    21.00  4.9   0.5   5.4   6.0 225.0    3   2      3
54   55.500   175.00  3.2   0.6   3.8  20.0 151.0    5   5      5
57    0.900     2.60 11.0   2.3  13.3   4.5  60.0    2   1      2
58    2.000    12.30  4.9   0.5   5.4   7.5 200.0    3   1      3
59    0.104     2.50 13.2   2.6  15.8   2.3  46.0    3   2      2
60    4.190    58.00  9.7   0.6  10.3  24.0 210.0    4   3      4
61    3.500     3.90 12.8   6.6  19.4   3.0  14.0    2   1      1
> length(rownames(sleep))
[1] 62
> length(rownames(na.omit(sleep))
+ length(rownames(na.omit(sleep)))
Error: unexpected symbol in:
"length(rownames(na.omit(sleep))
length"
> length(rownames(na.omit(sleep)))
[1] 42
> 1/0
[1] Inf
> -1/0
[1] -Inf
> 0/0
[1] NaN
> is.nan(0/0)
[1] TRUE
> nchar('hello')
[1] 5
> month.name
 [1] "January"   "February"  "March"     "April"     "May"      
 [6] "June"      "July"      "August"    "September" "October"  
[11] "November"  "December" 
> nchar(month.name)
 [1] 7 8 5 5 3 4 4 6 9 7 8 8
> length(month.name)
[1] 12
> nchar(c(12,2,345))
[1] 2 1 3
> paste(c('rverybody','loves','stats'))
[1] "rverybody" "loves"     "stats"    
> paste('everybody','loves','stats')
[1] "everybody loves stats"
> paste('everybody','loves','stats',sep = '-')
[1] "everybody-loves-stats"
> names <- c('moe','larry','curly')
> paste(names,'loves stats')
[1] "moe loves stats"   "larry loves stats" "curly loves stats"
> substr(x = month.name,start = 1,stop = 3)
 [1] "Jan" "Feb" "Mar" "Apr" "May" "Jun" "Jul" "Aug" "Sep" "Oct" "Nov"
[12] "Dec"
> toupper(temp)
Error in toupper(temp) : object 'temp' not found
> tolower(temp)
Error in tolower(temp) : object 'temp' not found
> ?sub
> ?gsub
> temp <- substr(x = month.name,start = 1,stop = 3)
> toupper(temp)
 [1] "JAN" "FEB" "MAR" "APR" "MAY" "JUN" "JUL" "AUG" "SEP" "OCT" "NOV"
[12] "DEC"
> tolower(temp)
 [1] "jan" "feb" "mar" "apr" "may" "jun" "jul" "aug" "sep" "oct" "nov"
[12] "dec"
> gub("^(\\w","\\U\\1",tolower(temp))
Error in gub("^(\\w", "\\U\\1", tolower(temp)) : 
  could not find function "gub"
> gub("^(\\w)","\\U\\1",tolower(temp))
Error in gub("^(\\w)", "\\U\\1", tolower(temp)) : 
  could not find function "gub"
> gsub("^(\\w)","\\U\\1",tolower(temp))
 [1] "Ujan" "Ufeb" "Umar" "Uapr" "Umay" "Ujun" "Ujul" "Uaug" "Usep"
[10] "Uoct" "Unov" "Udec"
> gsub("^(\\w)","\\U\\1",tolower(temp),perl = T)
 [1] "Jan" "Feb" "Mar" "Apr" "May" "Jun" "Jul" "Aug" "Sep" "Oct" "Nov"
[12] "Dec"
> gsub("^(\\w)","\\L\\1",tolower(temp),perl = T)
 [1] "jan" "feb" "mar" "apr" "may" "jun" "jul" "aug" "sep" "oct" "nov"
[12] "dec"
> x <- c('b','A+','AC')
> x
[1] "b"  "A+" "AC"
> grep('A+',x)
[1] 2 3
> grep('A+',x,fixed = T)
[1] 2
> grep('A+',x,fixed = F)
[1] 2 3
> match("AC",x)
[1] 3
> strsplit
function (x, split, fixed = FALSE, perl = FALSE, useBytes = FALSE) 
.Internal(strsplit(x, as.character(split), fixed, perl, useBytes))
<bytecode: 0x0000020ccc2725d8>
<environment: namespace:base>
> path <- '/usr/local/bin/R'
> strsplit(path,'/')
[[1]]
[1] ""      "usr"   "local" "bin"   "R"    

> 
> strsplit(path,'/')
[[1]]
[1] ""      "usr"   "local" "bin"   "R"    

> strsplit(c(path,path),'/')
[[1]]
[1] ""      "usr"   "local" "bin"   "R"    

[[2]]
[1] ""      "usr"   "local" "bin"   "R"    

> face <- 1：13
Error: unexpected input in "face <- 1："
> face
Error: object 'face' not found
> face <- 1:13
> 
> face
 [1]  1  2  3  4  5  6  7  8  9 10 11 12 13
> suit <- c('spades','clubs','hearts','diamonds')
> suit
[1] "spades"   "clubs"    "hearts"   "diamonds"
> outer(suit,face,FUN = paste
+ outer(suit,face,FUN = paste)
Error: unexpected symbol in:
"outer(suit,face,FUN = paste
outer"
> outer(suit,face,FUN = paste)
     [,1]         [,2]         [,3]         [,4]         [,5]        
[1,] "spades 1"   "spades 2"   "spades 3"   "spades 4"   "spades 5"  
[2,] "clubs 1"    "clubs 2"    "clubs 3"    "clubs 4"    "clubs 5"   
[3,] "hearts 1"   "hearts 2"   "hearts 3"   "hearts 4"   "hearts 5"  
[4,] "diamonds 1" "diamonds 2" "diamonds 3" "diamonds 4" "diamonds 5"
     [,6]         [,7]         [,8]         [,9]         [,10]        
[1,] "spades 6"   "spades 7"   "spades 8"   "spades 9"   "spades 10"  
[2,] "clubs 6"    "clubs 7"    "clubs 8"    "clubs 9"    "clubs 10"   
[3,] "hearts 6"   "hearts 7"   "hearts 8"   "hearts 9"   "hearts 10"  
[4,] "diamonds 6" "diamonds 7" "diamonds 8" "diamonds 9" "diamonds 10"
     [,11]         [,12]         [,13]        
[1,] "spades 11"   "spades 12"   "spades 13"  
[2,] "clubs 11"    "clubs 12"    "clubs 13"   
[3,] "hearts 11"   "hearts 12"   "hearts 13"  
[4,] "diamonds 11" "diamonds 12" "diamonds 13"
> sunspot.month
       Jan   Feb   Mar   Apr   May   Jun   Jul   Aug   Sep   Oct   Nov
1749  58.0  62.6  70.0  55.7  85.0  83.5  94.8  66.3  75.9  75.5 158.6
1750  73.3  75.9  89.2  88.3  90.0 100.0  85.4 103.0  91.2  65.7  63.3
1751  70.0  43.5  45.3  56.4  60.7  50.7  66.3  59.8  23.5  23.2  28.5
1752  35.0  50.0  71.0  59.3  59.7  39.6  78.4  29.3  27.1  46.6  37.6
1753  44.0  32.0  45.7  38.0  36.0  31.7  22.0  39.0  28.0  25.0  20.0
1754   0.0   3.0   1.7  13.7  20.7  26.7  18.8  12.3   8.2  24.1  13.2
1755  10.2  11.2   6.8   6.5   0.0   0.0   8.6   3.2  17.8  23.7   6.8
1756  12.5   7.1   5.4   9.4  12.5  12.9   3.6   6.4  11.8  14.3  17.0
1757  14.1  21.2  26.2  30.0  38.1  12.8  25.0  51.3  39.7  32.5  64.7
1758  37.6  52.0  49.0  72.3  46.4  45.0  44.0  38.7  62.5  37.7  43.0
1759  48.3  44.0  46.8  47.0  49.0  50.0  51.0  71.3  77.2  59.7  46.3
1760  67.3  59.5  74.7  58.3  72.0  48.3  66.0  75.6  61.3  50.6  59.7
1761  70.0  91.0  80.7  71.7 107.2  99.3  94.1  91.1 100.7  88.7  89.7
1762  43.8  72.8  45.7  60.2  39.9  77.1  33.8  67.7  68.5  69.3  77.8
1763  56.5  31.9  34.2  32.9  32.7  35.8  54.2  26.5  68.1  46.3  60.9
1764  59.7  59.7  40.2  34.4  44.3  30.0  30.0  30.0  28.2  28.0  26.0
1765  24.0  26.0  25.0  22.0  20.2  20.0  27.0  29.7  16.0  14.0  14.0
1766  12.0  11.0  36.6   6.0  26.8   3.0   3.3   4.0   4.3   5.0   5.7
1767  27.4  30.0  43.0  32.9  29.8  33.3  21.9  40.8  42.7  44.1  54.7
1768  53.5  66.1  46.3  42.7  77.7  77.4  52.6  66.8  74.8  77.8  90.6
1769  73.9  64.2  64.3  96.7  73.6  94.4 118.6 120.3 148.8 158.2 148.1
1770 104.0 142.5  80.1  51.0  70.1  83.3 109.8 126.3 104.4 103.6 132.2
1771  36.0  46.2  46.7  64.9 152.7 119.5  67.7  58.5 101.4  90.0  99.7
1772 100.9  90.8  31.1  92.2  38.0  57.0  77.3  56.2  50.5  78.6  61.3
1773  54.6  29.0  51.2  32.9  41.1  28.4  27.7  12.7  29.3  26.3  40.9
1774  46.8  65.4  55.7  43.8  51.3  28.5  17.5   6.6   7.9  14.0  17.7
1775   4.4   0.0  11.6  11.2   3.9  12.3   1.0   7.9   3.2   5.6  15.1
1776  21.7  11.6   6.3  21.8  11.2  19.0   1.0  24.2  16.0  30.0  35.0
1777  45.0  36.5  39.0  95.5  80.3  80.7  95.0 112.0 116.2 106.5 146.0
1778 177.3 109.3 134.0 145.0 238.9 171.6 153.0 140.0 171.7 156.3 150.3
1779 114.7 165.7 118.0 145.0 140.0 113.7 143.0 112.0 111.0 124.0 114.0
1780  70.0  98.0  98.0  95.0 107.2  88.0  86.0  86.0  93.7  77.0  60.0
1781  98.7  74.7  53.0  68.3 104.7  97.7  73.5  66.0  51.0  27.3  67.0
1782  54.0  37.5  37.0  41.0  54.3  38.0  37.0  44.0  34.0  23.2  31.5
1783  28.0  38.7  26.7  28.3  23.0  25.2  32.2  20.0  18.0   8.0  15.0
1784  13.0   8.0  11.0  10.0   6.0   9.0   6.0  10.0  10.0   8.0  17.0
1785   6.5   8.0   9.0  15.7  20.7  26.3  36.3  20.0  32.0  47.2  40.2
1786  37.2  47.6  47.7  85.4  92.3  59.0  83.0  89.7 111.5 112.3 116.0
1787 134.7 106.0  87.4 127.2 134.8  99.2 128.0 137.2 157.3 157.0 141.5
1788 138.0 129.2 143.3 108.5 113.0 154.2 141.5 136.0 141.0 142.0  94.7
1789 114.0 125.3 120.0 123.3 123.5 120.0 117.0 103.0 112.0  89.7 134.0
1790 103.0 127.5  96.3  94.0  93.0  91.0  69.3  87.0  77.3  84.3  82.0
1791  72.7  62.0  74.0  77.2  73.7  64.2  71.0  43.0  66.5  61.7  67.0
1792  58.0  64.0  63.0  75.7  62.0  61.0  45.8  60.0  59.0  59.0  57.0
1793  56.0  55.0  55.5  53.0  52.3  51.0  50.0  29.3  24.0  47.0  44.0
1794  45.0  44.0  38.0  28.4  55.7  41.5  41.0  40.0  11.1  28.5  67.4
1795  21.4  39.9  12.6  18.6  31.0  17.1  12.9  25.7  13.5  19.5  25.0
1796  22.0  23.8  15.7  31.7  21.0   6.7  26.9   1.5  18.4  11.0   8.4
1797  14.4   4.2   4.0   4.0   7.3  11.1   4.3   6.0   5.7   6.9   5.8
1798   2.0   4.0  12.4   1.1   0.0   0.0   0.0   3.0   2.4   1.5  12.5
1799   1.6  12.6  21.7   8.4   8.2  10.6   2.1   0.0   0.0   4.6   2.7
1800   6.9   9.3  13.9   0.0   5.0  23.7  21.0  19.5  11.5  12.3  10.5
1801  27.0  29.0  30.0  31.0  32.0  31.2  35.0  38.7  33.5  32.6  39.8
1802  47.8  47.0  40.8  42.0  44.0  46.0  48.0  50.0  51.8  38.5  34.5
1803  50.0  50.8  29.5  25.0  44.3  36.0  48.3  34.1  45.3  54.3  51.0
1804  45.3  48.3  48.0  50.6  33.4  34.8  29.8  43.1  53.0  62.3  61.0
1805  61.0  44.1  51.4  37.5  39.0  40.5  37.6  42.7  44.4  29.4  41.0
1806  39.0  29.6  32.7  27.7  26.4  25.6  30.0  26.3  24.0  27.0  25.0
1807  12.0  12.2   9.6  23.8  10.0  12.0  12.7  12.0   5.7   8.0   2.6
1808   0.0   4.5   0.0  12.3  13.5  13.5   6.7   8.0  11.7   4.7  10.5
1809   7.2   9.2   0.9   2.5   2.0   7.7   0.3   0.2   0.4   0.0   0.0
1810   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0   0.0
1811   0.0   0.0   0.0   0.0   0.0   0.0   6.6   0.0   2.4   6.1   0.8
1812  11.3   1.9   0.7   0.0   1.0   1.3   0.5  15.6   5.2   3.9   7.9
1813   0.0  10.3   1.9  16.6   5.5  11.2  18.3   8.4  15.3  27.8  16.7
1814  22.2  12.0   5.7  23.8   5.8  14.9  18.5   2.3   8.1  19.3  14.5
1815  19.2  32.2  26.2  31.6   9.8  55.9  35.5  47.2  31.5  33.5  37.2
1816  26.3  68.8  73.7  58.8  44.3  43.6  38.8  23.2  47.8  56.4  38.1
1817  36.4  57.9  96.2  26.4  21.2  40.0  50.0  45.0  36.7  25.6  28.9
1818  34.9  22.4  25.4  34.5  53.1  36.4  28.0  31.5  26.1  31.6  10.9
1819  32.8  20.7   3.7  20.2  19.6  35.0  31.4  26.1  14.9  27.5  25.1
1820  19.2  26.6   4.5  19.4  29.3  10.8  20.6  25.9   5.2   8.9   7.9
1821  21.5   4.2   5.7   9.2   1.7   1.8   2.5   4.8   4.4  18.8   4.4
1822   0.0   0.9  16.1  13.5   1.5   5.6   7.9   2.1   0.0   0.4   0.0
1823   0.0   0.0   0.6   0.0   0.0   0.0   0.5   0.0   0.0   0.0   0.0
1824  21.7  10.8   0.0  19.4   2.8   0.0   0.0   1.4  20.5  25.2   0.0
1825   5.0  15.5  22.4   3.8  15.5  15.4  30.9  25.7  15.7  15.6  11.7
1826  17.7  18.2  36.7  24.0  32.4  37.1  52.5  39.6  18.9  50.6  39.5
1827  34.6  47.4  57.8  46.0  56.3  56.7  42.3  53.7  49.6  56.1  48.2
1828  52.8  64.4  65.0  61.1  89.1  98.0  54.2  76.4  50.4  54.7  57.0
1829  43.0  49.4  72.3  95.0  67.4  73.9  90.8  77.6  52.8  57.2  67.6
1830  52.2  72.1  84.6 106.3  66.3  65.1  43.9  50.7  62.1  84.4  81.2
1831  47.5  50.1  93.4  54.5  38.1  33.4  45.2  55.0  37.9  46.3  43.5
       Dec
1749  85.2
1750  75.4
1751  44.0
1752  40.0
1753   6.7
1754   4.2
1755  20.0
1756   9.4
1757  33.5
1758  43.0
1759  57.0
1760  61.0
1761  46.0
1762  77.2
1763  61.4
1764  25.7
1765  13.0
1766  19.2
1767  53.3
1768 111.8
1769 112.0
1770 102.3
1771  95.7
1772  64.0
1773  43.2
1774  12.2
1775   7.9
1776  40.0
1777 157.3
1778 105.0
1779 110.0
1780  58.7
1781  35.2
1782  30.0
1783  10.5
1784  14.0
1785  27.3
1786 112.7
1787 174.0
1788 129.5
1789 135.5
1790  74.0
1791  66.0
1792  56.0
1793  45.7
1794  51.4
1795  18.0
1796   5.1
1797   3.0
1798   9.9
1799   8.6
1800  40.1
1801  48.2
1802  50.0
1803  48.0
1804  60.0
1805  38.3
1806  24.0
1807   0.0
1808  12.3
1809   0.0
1810   0.0
1811   1.1
1812  10.1
1813  14.3
1814  20.1
1815  65.0
1816  29.9
1817  28.4
1818  25.8
1819  30.6
1820   9.1
1821   0.2
1822   0.0
1823  20.4
1824   0.8
1825  22.0
1826  68.1
1827  46.1
1828  46.9
1829  56.5
1830  82.1
1831  28.9
 [ reached getOption("max.print") -- omitted 182 rows ]
> presidents
     Qtr1 Qtr2 Qtr3 Qtr4
1945   NA   87   82   75
1946   63   50   43   32
1947   35   60   54   55
1948   36   39   NA   NA
1949   69   57   57   51
1950   45   37   46   39
1951   36   24   32   23
1952   25   32   NA   32
1953   59   74   75   60
1954   71   61   71   57
1955   71   68   79   73
1956   76   71   67   75
1957   79   62   63   57
1958   60   49   48   52
1959   57   62   61   66
1960   71   62   61   57
1961   72   83   71   78
1962   79   71   62   74
1963   76   64   62   57
1964   80   73   69   69
1965   71   64   69   62
1966   63   46   56   44
1967   44   52   38   46
1968   36   49   35   44
1969   59   65   65   56
1970   66   53   61   52
1971   51   48   54   49
1972   49   61   NA   NA
1973   68   44   40   27
1974   28   25   24   24
> class(presidents)
[1] "ts"
> presidents$Qtr1
Error in presidents$Qtr1 : $ operator is invalid for atomic vectors
> airquality
    Ozone Solar.R Wind Temp Month Day
1      41     190  7.4   67     5   1
2      36     118  8.0   72     5   2
3      12     149 12.6   74     5   3
4      18     313 11.5   62     5   4
5      NA      NA 14.3   56     5   5
6      28      NA 14.9   66     5   6
7      23     299  8.6   65     5   7
8      19      99 13.8   59     5   8
9       8      19 20.1   61     5   9
10     NA     194  8.6   69     5  10
11      7      NA  6.9   74     5  11
12     16     256  9.7   69     5  12
13     11     290  9.2   66     5  13
14     14     274 10.9   68     5  14
15     18      65 13.2   58     5  15
16     14     334 11.5   64     5  16
17     34     307 12.0   66     5  17
18      6      78 18.4   57     5  18
19     30     322 11.5   68     5  19
20     11      44  9.7   62     5  20
21      1       8  9.7   59     5  21
22     11     320 16.6   73     5  22
23      4      25  9.7   61     5  23
24     32      92 12.0   61     5  24
25     NA      66 16.6   57     5  25
26     NA     266 14.9   58     5  26
27     NA      NA  8.0   57     5  27
28     23      13 12.0   67     5  28
29     45     252 14.9   81     5  29
30    115     223  5.7   79     5  30
31     37     279  7.4   76     5  31
32     NA     286  8.6   78     6   1
33     NA     287  9.7   74     6   2
34     NA     242 16.1   67     6   3
35     NA     186  9.2   84     6   4
36     NA     220  8.6   85     6   5
37     NA     264 14.3   79     6   6
38     29     127  9.7   82     6   7
39     NA     273  6.9   87     6   8
40     71     291 13.8   90     6   9
41     39     323 11.5   87     6  10
42     NA     259 10.9   93     6  11
43     NA     250  9.2   92     6  12
44     23     148  8.0   82     6  13
45     NA     332 13.8   80     6  14
46     NA     322 11.5   79     6  15
47     21     191 14.9   77     6  16
48     37     284 20.7   72     6  17
49     20      37  9.2   65     6  18
50     12     120 11.5   73     6  19
51     13     137 10.3   76     6  20
52     NA     150  6.3   77     6  21
53     NA      59  1.7   76     6  22
54     NA      91  4.6   76     6  23
55     NA     250  6.3   76     6  24
56     NA     135  8.0   75     6  25
57     NA     127  8.0   78     6  26
58     NA      47 10.3   73     6  27
59     NA      98 11.5   80     6  28
60     NA      31 14.9   77     6  29
61     NA     138  8.0   83     6  30
62    135     269  4.1   84     7   1
63     49     248  9.2   85     7   2
64     32     236  9.2   81     7   3
65     NA     101 10.9   84     7   4
66     64     175  4.6   83     7   5
67     40     314 10.9   83     7   6
68     77     276  5.1   88     7   7
69     97     267  6.3   92     7   8
70     97     272  5.7   92     7   9
71     85     175  7.4   89     7  10
72     NA     139  8.6   82     7  11
73     10     264 14.3   73     7  12
74     27     175 14.9   81     7  13
75     NA     291 14.9   91     7  14
76      7      48 14.3   80     7  15
77     48     260  6.9   81     7  16
78     35     274 10.3   82     7  17
79     61     285  6.3   84     7  18
80     79     187  5.1   87     7  19
81     63     220 11.5   85     7  20
82     16       7  6.9   74     7  21
83     NA     258  9.7   81     7  22
84     NA     295 11.5   82     7  23
85     80     294  8.6   86     7  24
86    108     223  8.0   85     7  25
87     20      81  8.6   82     7  26
88     52      82 12.0   86     7  27
89     82     213  7.4   88     7  28
90     50     275  7.4   86     7  29
91     64     253  7.4   83     7  30
92     59     254  9.2   81     7  31
93     39      83  6.9   81     8   1
94      9      24 13.8   81     8   2
95     16      77  7.4   82     8   3
96     78      NA  6.9   86     8   4
97     35      NA  7.4   85     8   5
98     66      NA  4.6   87     8   6
99    122     255  4.0   89     8   7
100    89     229 10.3   90     8   8
101   110     207  8.0   90     8   9
102    NA     222  8.6   92     8  10
103    NA     137 11.5   86     8  11
104    44     192 11.5   86     8  12
105    28     273 11.5   82     8  13
106    65     157  9.7   80     8  14
107    NA      64 11.5   79     8  15
108    22      71 10.3   77     8  16
109    59      51  6.3   79     8  17
110    23     115  7.4   76     8  18
111    31     244 10.9   78     8  19
112    44     190 10.3   78     8  20
113    21     259 15.5   77     8  21
114     9      36 14.3   72     8  22
115    NA     255 12.6   75     8  23
116    45     212  9.7   79     8  24
117   168     238  3.4   81     8  25
118    73     215  8.0   86     8  26
119    NA     153  5.7   88     8  27
120    76     203  9.7   97     8  28
121   118     225  2.3   94     8  29
122    84     237  6.3   96     8  30
123    85     188  6.3   94     8  31
124    96     167  6.9   91     9   1
125    78     197  5.1   92     9   2
126    73     183  2.8   93     9   3
127    91     189  4.6   93     9   4
128    47      95  7.4   87     9   5
129    32      92 15.5   84     9   6
130    20     252 10.9   80     9   7
131    23     220 10.3   78     9   8
132    21     230 10.9   75     9   9
133    24     259  9.7   73     9  10
134    44     236 14.9   81     9  11
135    21     259 15.5   76     9  12
136    28     238  6.3   77     9  13
137     9      24 10.9   71     9  14
138    13     112 11.5   71     9  15
139    46     237  6.9   78     9  16
140    18     224 13.8   67     9  17
141    13      27 10.3   76     9  18
142    24     238 10.3   68     9  19
143    16     201  8.0   82     9  20
144    13     238 12.6   64     9  21
145    23      14  9.2   71     9  22
146    36     139 10.3   81     9  23
147     7      49 10.3   69     9  24
148    14      20 16.6   63     9  25
149    30     193  6.9   70     9  26
150    NA     145 13.2   77     9  27
151    14     191 14.3   75     9  28
152    18     131  8.0   76     9  29
153    20     223 11.5   68     9  30
> class(airquality)
[1] "data.frame"
> airmiles
Time Series:
Start = 1937 
End = 1960 
Frequency = 1 
 [1]   412   480   683  1052  1385  1418  1634  2178  3362  5948  6109  5981  6753
[14]  8003 10566 12528 14760 16769 19819 22362 25340 25343 29269 30514
> Sys.Date()
[1] "2023-02-27"
> class(Sys.Date())
[1] "Date"
> a <- '2017-01-01'
> as.Date(a)
[1] "2017-01-01"
> class(a)
[1] "character"
> as.Date(a,format = '%Y-%m-%d')
[1] "2017-01-01"
> class(as.Date(a,format = '%Y-%m-%d'))
[1] "Date"
> ?strftime
> seq(as.Date('2017-01-07'),as.Date('2017-07-07'),)
Error in seq.Date(as.Date("2017-01-07"), as.Date("2017-07-07"), ) : 
   'to'，'by'，'length.out'/'along.with'中四个只能同时选两个
> seq(as.Date('2017-01-07'),as.Date('2017-07-07'),by=5)
 [1] "2017-01-07" "2017-01-12" "2017-01-17" "2017-01-22" "2017-01-27" "2017-02-01"
 [7] "2017-02-06" "2017-02-11" "2017-02-16" "2017-02-21" "2017-02-26" "2017-03-03"
[13] "2017-03-08" "2017-03-13" "2017-03-18" "2017-03-23" "2017-03-28" "2017-04-02"
[19] "2017-04-07" "2017-04-12" "2017-04-17" "2017-04-22" "2017-04-27" "2017-05-02"
[25] "2017-05-07" "2017-05-12" "2017-05-17" "2017-05-22" "2017-05-27" "2017-06-01"
[31] "2017-06-06" "2017-06-11" "2017-06-16" "2017-06-21" "2017-06-26" "2017-07-01"
[37] "2017-07-06"
> sales <- round(runif(48,min = 50,max = 100))
> sales
 [1] 56 52 86 97 88 99 64 56 96 77 54 79 91 99 79 53 81 68 60 55 86 93 96 53 95 68 54
[28] 59 91 88 67 91 52 54 91 68 94 91 89 59 60 93 79 92 59 57 95 53
> ts(sales,start =c(2010,5),end = c(2014,4),frequency = 1)
Time Series:
Start = 2014 
End = 2017 
Frequency = 1 
[1] 56 52 86 97
> ts(sales,start =c(2010,5),end = c(2014,4),frequency = 4)
     Qtr1 Qtr2 Qtr3 Qtr4
2011   56   52   86   97
2012   88   99   64   56
2013   96   77   54   79
2014   91   99   79   53
> ts(sales,start =c(2010,5),end = c(2014,4),frequency = 12)
     Jan Feb Mar Apr May Jun Jul Aug Sep Oct Nov Dec
2010                  56  52  86  97  88  99  64  56
2011  96  77  54  79  91  99  79  53  81  68  60  55
2012  86  93  96  53  95  68  54  59  91  88  67  91
2013  52  54  91  68  94  91  89  59  60  93  79  92
2014  59  57  95  53                                
